{"version":3,"sources":["component/Foot/Foot.js","component/Form/Formular.js","component/Header/Header.js","component/TaskList/TaskList.js","component/Barchart/Barchart.js","component/Piechart/Piechart.js","App.js","reportWebVitals.js","index.js"],"names":["Foot","Navbar","bg","Container","className","Brand","Row","Col","xs","Image","src","fluid","registerLocale","de","Formular","onNewToDo","useState","Date","startDate","setStartDate","task","setTask","kategorie","setKategorie","md","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","locale","selected","date","dateFormat","as","Button","variant","onClick","format","disabled","Header","TaskList","tasks","deleteTask","length","Table","bordered","hover","size","map","index","deleteHandler","Barchart","data","setData","useEffect","reduce","currentData","dataIndex","findIndex","singleData","push","count","sort","a","b","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","name","fill","COLORS","Piechart","console","log","PieChart","Pie","labelLine","outerRadius","nameKey","entry","Cell","App","JSON","parse","localStorage","getItem","setTasks","setItem","stringify","currentTasks","currTasks","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe2bc686.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Image, Navbar, Col, Row } from \"react-bootstrap\";\n\nconst Foot = () => {\n  return (\n    <Navbar bg=\"primary\">\n      <Container className=\"justify-content-center\">\n        <Navbar.Brand>\n          <Row className=\"justify-content-center\">\n            <Col xs={8}>\n              <Image src=\"./assets/logo.png\" fluid />\n            </Col>\n          </Row>\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Foot;\n","import React, { useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport { format } from \"date-fns\";\nimport de from \"date-fns/locale/de\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nregisterLocale(\"de\", de);\nconst Formular = ({ onNewToDo }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [task, setTask] = useState(\"\");\n  const [kategorie, setKategorie] = useState(\"\");\n\n  const saveHandler = () => {\n    onNewToDo({\n      task,\n      kategorie,\n      startDate: format(startDate, \"dd.MM.yyyy\"),\n    });\n  };\n\n  return (\n    <div>\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={6}>\n            <Form>\n              <Form.Group controlId=\"aufgabe\">\n                <Form.Label>Aufgabe</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Aufgabe hinzufÃ¼gen...\"\n                  value={task}\n                  onChange={(e) => setTask(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>erledigt bis</Form.Label>\n                <Form.Group>\n                  <DatePicker\n                    locale=\"de\"\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    dateFormat=\"dd.MM.yyyy\"\n                  />\n                </Form.Group>\n              </Form.Group>\n\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Kategorie</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={kategorie}\n                  onChange={(e) => setKategorie(e.target.value)}\n                >\n                  <option>-</option>\n                  <option>Privat</option>\n                  <option>Arbeit</option>\n                  <option>Schule</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Button\n                variant=\"secondary\"\n                onClick={saveHandler}\n                disabled={task ? false : true}\n              >\n                Aufgabe speichen\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Formular;\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"primary\">\n      <Container className=\"justify-content-center\">\n        <Navbar.Brand>\n          <h1>Mein TODO-List</h1>\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table, Col, Row, Container, Button } from \"react-bootstrap\";\n\nconst TaskList = ({ tasks = [], deleteTask }) => {\n  if (tasks.length === 0) {\n    return (\n      <Container fluid className=\"mt-3\">\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={6}>\n            <h2>Alles erledigt, keine offenen Todos!</h2>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  const deleteHandler = (index) => {\n    deleteTask({ index });\n  };\n  return (\n    <Container fluid className=\"mt-3\">\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          <Table bordered hover size=\"lg\">\n            <thead>\n              <tr>\n                <th>Aufgabe</th>\n                <th>bis</th>\n                <th>Kategorie</th>\n                <th>Done</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.map((task, index) => (\n                <tr key={index}>\n                  <td>{task.task}</td>\n                  <td>{task.startDate}</td>\n                  <td>{task.kategorie}</td>\n                  <td>\n                    <Button onClick={() => deleteHandler(index)}>\n                      <i className=\"fas fa-times-circle\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import React, { useState, useEffect } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst Barchart = ({ tasks }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(() => {\n      return tasks.reduce((currentData, task) => {\n        const dataIndex = currentData.findIndex(singleData => singleData.startDate === task.startDate);\n        if (dataIndex === -1) {\n          currentData.push({ startDate: task.startDate, count: 1 })\n        } else {\n          currentData[dataIndex].count++;\n        }\n        return [...currentData];\n      }, []).sort((a,b) => a.startDate > b.startDate ? 1: -1);\n    })\n  }, [tasks]);\n\n  return (\n    <Container fluid className=\"mt-3\">\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <BarChart\n              // width={760}\n              // height={300}\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"startDate\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"count\" name=\"Offene Todos\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Barchart;\n","import React, { useState, useEffect } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Cell, Pie, PieChart, ResponsiveContainer } from \"recharts\";\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nconst Piechart = ({ tasks }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setData(() => {\n      return tasks\n        .reduce((currentData, task) => {\n          const dataIndex = currentData.findIndex(\n            (singleData) => singleData.kategorie === task.kategorie\n          );\n          if (dataIndex === -1) {\n            currentData.push({ kategorie: task.kategorie, count: 1 });\n          } else {\n            currentData[dataIndex].count++;\n          }\n          return [...currentData];\n        }, [])\n        .sort((a, b) => (a.kategorie > b.kategorie ? 1 : -1));\n    });\n  }, [tasks]);\n\n  console.log(data);\n\n  return (\n    <Container fluid className=\"mt-3\">\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={8}>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <PieChart width={400} height={400}>\n              <Pie\n                data={data}\n                labelLine={false}\n                outerRadius={100}\n                fill=\"#8884d8\"\n                dataKey=\"count\"\n                nameKey=\"kategorie\"\n              >\n                {data.map((entry, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  ></Cell>\n                ))}\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Piechart;\n","import { useState, useEffect } from \"react\";\nimport Foot from \"./component/Foot/Foot\";\nimport Formular from \"./component/Form/Formular\";\nimport Header from \"./component/Header/Header\";\nimport TaskList from \"./component/TaskList/TaskList\";\nimport \"./App.scss\";\nimport Barchart from \"./component/Barchart/Barchart\";\nimport Piechart from \"./component/Piechart/Piechart\";\n\nfunction App() {\n  const [tasks, setTasks] = useState(\n    JSON.parse(localStorage.getItem(\"tasks\") || \"[]\")\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"py-3 formular\">\n        <Formular\n          onNewToDo={(task) =>\n            setTasks((currentTasks) => {\n              return [...currentTasks, task];\n            })\n          }\n        />\n        <TaskList\n          tasks={tasks}\n          deleteTask={(index) => {\n            const currTasks = [...tasks];\n            currTasks.splice(index, 1);\n            setTasks(currTasks);\n          }}\n        />\n        <Barchart tasks={tasks}/>\n        <Piechart tasks={tasks} />\n      </main>\n      <footer>\n        <Foot />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/style/theme.scss'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}