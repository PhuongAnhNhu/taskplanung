{"version":3,"sources":["component/Foot/Foot.js","component/Form/Formular.js","component/Header/Header.js","component/TaskList/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["Foot","Navbar","bg","Container","className","Brand","Row","Col","xs","Image","src","fluid","Formular","onNewToDo","useState","Date","startDate","setStartDate","task","setTask","kategotie","setKategotie","md","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","selected","date","as","Button","variant","onClick","disabled","Header","TaskList","tasks","deleteTask","length","Table","bordered","hover","size","map","index","toLocaleDateString","deleteHandler","App","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","currentTasks","currTasks","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAmBeA,EAhBF,WACX,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,UAAX,SACE,cAACC,EAAA,EAAD,CAAWC,UAAU,yBAArB,SACE,cAACH,EAAA,EAAOI,MAAR,UACE,cAACC,EAAA,EAAD,CAAKF,UAAU,yBAAf,SACE,cAACG,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,CAAOC,IAAI,oBAAoBC,OAAK,e,mCCwDnCC,G,MA7DE,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACjB,EAAkCC,mBAAS,IAAIC,MAA/C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBH,mBAAS,IAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAAkCL,mBAAS,IAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAOA,OACE,8BACE,cAAClB,EAAA,EAAD,CAAWQ,OAAK,EAAhB,SACE,cAACL,EAAA,EAAD,CAAKF,UAAU,4BAAf,SACE,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIc,GAAI,EAAjB,SACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,YAAY,2BACZC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEC,OAAOH,aAItC,eAACP,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKC,MAAN,UACE,cAAC,IAAD,CACEU,SAAUlB,EACVe,SAAU,SAACI,GAAD,OAAUlB,EAAakB,WAKvC,eAACZ,EAAA,EAAKC,MAAN,CAAYC,UAAU,6BAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,eAACH,EAAA,EAAKI,QAAN,CACES,GAAG,SACHN,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAaW,EAAEC,OAAOH,QAHzC,UAKE,uCACA,4CACA,4CACA,kDAIJ,cAACO,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QA5CpB,WAClB1B,EAAU,CAACK,OAAME,YAAWJ,eA2CgCwB,UAAUtB,EAA5D,2CCxCCuB,EAZA,WACb,OACE,cAACxC,EAAA,EAAD,CAAQC,GAAG,UAAX,SACE,cAACC,EAAA,EAAD,CAAWC,UAAU,yBAArB,SACE,cAACH,EAAA,EAAOI,MAAR,UACE,uD,SC6CKqC,EAlDE,SAAC,GAAgC,IAAD,IAA7BC,aAA6B,MAArB,GAAqB,EAAjBC,EAAiB,EAAjBA,WAC9B,GAAqB,IAAjBD,EAAME,OACR,OACE,cAAC1C,EAAA,EAAD,CAAWQ,OAAK,EAACP,UAAU,OAA3B,SACE,cAACE,EAAA,EAAD,CAAKF,UAAU,4BAAf,SACE,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIc,GAAI,EAAjB,SACE,4EAUV,OACE,cAACnB,EAAA,EAAD,CAAWQ,OAAK,EAACP,UAAU,OAA3B,SACE,cAACE,EAAA,EAAD,CAAKF,UAAU,4BAAf,SACE,cAACG,EAAA,EAAD,CAAKC,GAAI,GAAIc,GAAI,EAAjB,SACE,eAACwB,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAA3B,UACE,gCACE,+BACE,yCACA,qCACA,2CACA,2CAGJ,gCACGN,EAAMO,KAAI,SAAChC,EAAMiC,GAAP,OACT,+BACE,6BAAKjC,EAAKA,OACV,6BAAK,IAAIH,KAAKG,EAAKF,WAAWoC,uBAC9B,6BAAKlC,EAAKE,YACV,6BACE,cAACiB,EAAA,EAAD,CAAQE,QAAS,kBAvBb,SAACY,GACrBP,EAAW,CAAEO,UAsB0BE,CAAcF,IAArC,SACE,mBAAG/C,UAAU,8BANV+C,kB,OCQVG,MApCf,WACE,MAA0BxC,mBACxByC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,OAD9C,mBAAOf,EAAP,KAAcgB,EAAd,KAQA,OAJAC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAUnB,MAC5C,CAACA,IAGF,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAMA,UAAU,gBAAhB,UACE,cAAC,EAAD,CACES,UAAW,SAACK,GAAD,OACTyC,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAyB7C,UAI/B,cAAC,EAAD,CACEyB,MAAOA,EACPC,WAAY,SAACO,GACX,IAAMa,EAAS,YAAOrB,GACtBqB,EAAUC,OAAOd,EAAO,GACxBQ,EAASK,SAIf,iCACE,cAAC,EAAD,UCxBOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.857eedbc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Image, Navbar, Col, Row } from \"react-bootstrap\";\n\nconst Foot = () => {\n  return (\n    <Navbar bg=\"primary\">\n      <Container className=\"justify-content-center\">\n        <Navbar.Brand>\n          <Row className=\"justify-content-center\">\n            <Col xs={8}>\n              <Image src=\"./assets/logo.png\" fluid />\n            </Col>\n          </Row>\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Foot;\n","import React, { useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Formular = ({onNewToDo}) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [task, setTask] = useState(\"\");\n  const [kategotie, setKategotie] = useState(\"\");\n\n\n  const saveHandler = () => {\n    onNewToDo({task, kategotie, startDate})\n  }\n\n  return (\n    <div>\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={6}>\n            <Form >\n              <Form.Group controlId=\"aufgabe\">\n                <Form.Label>Aufgabe</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Aufgabe hinzufÃ¼gen...\"\n                  value={task}\n                  onChange={(e) => setTask(e.target.value)}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>erledigt bis</Form.Label>\n                <Form.Group>\n                  <DatePicker\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                  />\n                </Form.Group>\n              </Form.Group>\n\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Kategorie</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={kategotie}\n                  onChange={(e) => setKategotie(e.target.value)}\n                >\n                  <option>-</option>\n                  <option>Privat</option>\n                  <option>Arbeit</option>\n                  <option>Schule</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Button variant=\"secondary\" onClick={saveHandler} disabled={task ? false : true}>\n                Aufgabe speichen\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Formular;\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"primary\">\n      <Container className=\"justify-content-center\">\n        <Navbar.Brand>\n          <h1>Mein TODO-List</h1>\n        </Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Table, Col, Row, Container, Button } from \"react-bootstrap\";\n\nconst TaskList = ({ tasks = [], deleteTask }) => {\n  if (tasks.length === 0) {\n    return (\n      <Container fluid className=\"mt-3\">\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={6}>\n            <h2>Alles erledigt, keine offenen Todos!</h2>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  const deleteHandler = (index) => {\n    deleteTask({ index });\n  };\n  return (\n    <Container fluid className=\"mt-3\">\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          <Table bordered hover size=\"lg\">\n            <thead>\n              <tr>\n                <th>Aufgabe</th>\n                <th>bis</th>\n                <th>Kategorie</th>\n                <th>Done</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tasks.map((task, index) => (\n                <tr key={index}>\n                  <td>{task.task}</td>\n                  <td>{new Date(task.startDate).toLocaleDateString()}</td>\n                  <td>{task.kategotie}</td>\n                  <td>\n                    <Button onClick={() => deleteHandler(index)}>\n                      <i className=\"fas fa-times-circle\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import { useState, useEffect } from \"react\";\nimport Foot from \"./component/Foot/Foot\";\nimport Formular from \"./component/Form/Formular\";\nimport Header from \"./component/Header/Header\";\nimport TaskList from \"./component/TaskList/TaskList\";\nimport \"./App.scss\";\nfunction App() {\n  const [tasks, setTasks] = useState(\n    JSON.parse(localStorage.getItem(\"tasks\") || \"[]\")\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"py-3 formular\">\n        <Formular\n          onNewToDo={(task) =>\n            setTasks((currentTasks) => {\n              return [...currentTasks, task];\n            })\n          }\n        />\n        <TaskList\n          tasks={tasks}\n          deleteTask={(index) => {\n            const currTasks = [...tasks];\n            currTasks.splice(index, 1);\n            setTasks(currTasks);\n          }}\n        />\n      </main>\n      <footer>\n        <Foot />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/style/theme.scss'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}